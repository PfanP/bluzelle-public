syntax = "proto3";
package bluzelle.curium.tax;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/bluzelle/curium/x/tax/types";

// Query defines the gRPC querier service.
service Query {
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {

  }
}

message QueryParamsRequest {}
message QueryParamsResponse {
  uint64 gasTaxBp = 1;
  uint64 transferTaxBp = 2;
  string taxCollector = 3;
}
  // Parameters queries the parameters of the module.
//  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
//    option (google.api.http).get = "/bluzelle/curium/tax/params";
//  }
//  // this line is used by starport scaffolding # 2
//}
//
//// QueryParamsRequest is request type for the Query/Params RPC method.
//message QueryParamsRequest {}
//
//// QueryParamsResponse is response type for the Query/Params RPC method.
//message QueryParamsResponse {
//  // params holds all the parameters of this module.
//  Params params = 1 [(gogoproto.nullable) = false];


// this line is used by starport scaffolding # 3
